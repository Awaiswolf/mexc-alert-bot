import os
import time
import requests
import schedule
import threading
from telegram import Bot
from telegram.error import TelegramError

# ุฅุนุฏุงุฏุงุช ุงูุจูุช
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
CHAT_ID = os.getenv('CHAT_ID')
bot = Bot(token=TELEGRAM_TOKEN) if TELEGRAM_TOKEN else None

BASE_URL = "https://api.mexc.com/api/v3"
tracked_coins = {}

# ูุธููุฉ ููุญูุงุธ ุนูู ุงูุฎุฏูุฉ ูุดุทุฉ
def keep_alive():
    while True:
        try:
            # ุฃุฑุณู ุทูุจ ping ููุฎุงุฏู ููุญูุงุธ ุนูู ูุดุงุท ุงูุฎุฏูุฉ
            requests.get("https://mexc-alert-bot.onrender.com", timeout=10)
            print("ุชู ุฅุฑุณุงู ping ููุญูุงุธ ุนูู ุงูุฎุฏูุฉ ูุดุทุฉ")
        except:
            print("ูุดู ping ูููู ุณูุณุชูุฑ ุงูุจูุช ูู ุงูุนูู")
        time.sleep(300)  # ูู 5 ุฏูุงุฆู

# ุจุฏุก ูุธููุฉ ุงูุญูุงุธ ุนูู ุงููุดุงุท ูู ุฎูููุฉ
threading.Thread(target=keep_alive, daemon=True).start()

def get_coins():
    try:
        response = requests.get(f"{BASE_URL}/ticker/24hr", timeout=10)
        return response.json() if response.status_code == 200 else []
    except:
        return []

def send_alert(symbol, change, price, volume):
    emoji = "๐" if change > 0 else "๐ป"
    direction = "ุตุนูุฏ" if change > 0 else "ูุจูุท"
    
    # ุชู ุชุตุญูุญ ุงูุฃุฎุทุงุก ูู ุตูุงุบุฉ f-string ููุง
    message = (
        f"{emoji} {symbol}\n"
        f"{direction} ุจูุณุจุฉ: {abs(change):.2f}%\n"
        f"ุงูุณุนุฑ: {price}\n"
        f"ุงูุญุฌู: ${volume:,.0f}"
    )
    
    if bot:
        try:
            # ุชู ุชุตุญูุญ ุงููุดููุฉ: ุงุณุชุฎุฏุงู bot.send_message ุจุดูู ุตุญูุญ
            bot.send_message(chat_id=CHAT_ID, text=message)
            print(f"ุชู ุฅุฑุณุงู ุชูุจูู: {symbol}")
        except TelegramError as e:
            print(f"ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุชูุจูู: {e}")
    else:
        print(f"ุจุฏูู ุฅุฑุณุงู: {message}")

def check_prices():
    coins = get_coins()
    if not coins: 
        print("ูู ูุชู ุงูุญุตูู ุนูู ุจูุงูุงุช ุงูุนููุงุช")
        return
    
    print(f"ุฌุงุฑู ูุญุต {len(coins)} ุนููุฉ...")
    
    for coin in coins:
        symbol = coin['symbol']
        try:
            volume = float(coin['quoteVolume'])
            price = float(coin['lastPrice'])
        except:
            continue  # ุชุฎุทู ุงูุนููุฉ ุฅุฐุง ูุงู ููุงู ุฎุทุฃ ูู ุงูุชุญููู
        
        # ุชูุณูุน ูุทุงู ุญุฌู ุงูุชุฏุงูู (30,000 - 700,000 ุฏููุงุฑ)
        if 30000 <= volume <= 700000:
            if symbol not in tracked_coins:
                tracked_coins[symbol] = price
                print(f"ุจุฏุฃ ุชุชุจุน: {symbol} | ุงูุณุนุฑ: {price} | ุงูุญุฌู: ${volume:,.0f}")
        
        # ุงูุชุญูู ูู ุงูุชุบูุฑุงุช
        if symbol in tracked_coins:
            base_price = tracked_coins[symbol]
            try:
                change = ((price - base_price) / base_price) * 100
            except ZeroDivisionError:
                change = 0
                
            if change >= 5 or change <= -20:
                send_alert(symbol, change, price, volume)
                del tracked_coins[symbol]  # ุชููู ุนู ุงูุชุชุจุน

def job():
    try:
        print("\n" + "="*50)
        print(f"ุจุฏุก ุงููููุฉ: {time.strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"ุนุฏุฏ ุงูุนููุงุช ููุฏ ุงูุชุชุจุน: {len(tracked_coins)}")
        check_prices()
    except Exception as e:
        print(f"ุฎุทุฃ ูู ุงููููุฉ: {e}")

if __name__ == "__main__":
    print("ุจุฏุฃ ุชุดุบูู ุจูุช ูุฑุงูุจุฉ MEXC ูุน ุชุญุณููุงุช ุงูุฃุฏุงุก...")
    print("ูุถุน ุงูุชุชุจุน: ุญุฌู 30K-700K$ | ูุญุต ูู 30 ุซุงููุฉ")
    
    # ุฒูุงุฏุฉ ูุชูุฑุฉ ุงููุญุต ุฅูู ูู 30 ุซุงููุฉ
    schedule.every(30).seconds.do(job)
    
    # ุชุดุบูู ุงููููุฉ ููุฑุงู ุนูุฏ ุงูุจุฏุก
    job()
    
    while True:
        try:
            schedule.run_pending()
            time.sleep(1)
        except KeyboardInterrupt:
            print("ุฅููุงู ุงูุจูุช...")
            break
